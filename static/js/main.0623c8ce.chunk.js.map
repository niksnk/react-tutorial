{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","myRows","characterData","map","row","index","key","name","job","weapon","ultimate","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","this","for","type","id","onChange","Component","App","characters","seconds","filter","character","i","tick","interval","setInterval","clearInterval","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0623c8ce.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\n\n  const TableHeader = () => {\n      return (\n        <thead>\n          <tr>\n            <th> Name </th>\n            <th> Job </th>\n            <th> Weapon </th>\n            <th> Ultimate </th>\n            <th> Remove Item </th>\n          </tr>\n        </thead>\n      )\n    }\n    const TableBody = props => {\n      const myRows = props.characterData.map((row,index) => {\n        return(\n          <tr key={index}>\n\n            <td> {row.name} </td>\n            <td> {row.job} </td>\n            <td> {row.weapon} </td>\n            <td> {row.ultimate} </td>\n            <td>\n              <button onClick={() => props.removeCharacter(index)}> Remove </button>\n            </td>\n          </tr>\n        )\n      })\n\n      return <tbody> { myRows} </tbody>\n\n    }\n    const Table = (props) =>{\n      const {characterData, removeCharacter } = props;\n\n      return(\n        <table>\n          <TableHeader />\n          <TableBody characterData ={characterData} removeCharacter={removeCharacter}/>\n        </table>\n      )\n    }\n\n\n\nexport default Table\n","import React, {Component} from 'react'\n\n\n\nclass Form extends Component{\n  constructor(props){\n    super(props)\n\n    this.initialState = {\n      name: '',\n      job: '',\n      weapon: '',\n      ultimate: '',\n    }\n\n    this.state = this.initialState\n\n  }\n\n\n  handleChange = event => {\n    const {name,job,weapon,ultimate,value} = event.target\n    this.setState({\n      [name]: value,\n      [job]: value,\n      [weapon]: value,\n      [ultimate]: value,\n    })\n  }\n\n  submitForm = () =>{\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render(){\n    const {name,job,weapon,ultimate} = this.state;\n    return(\n      <form>\n        <label for=\"name\">Name</label>\n          <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange}/>\n          <label for=\"job\">Job</label>\n            <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange}/>\n          <label for=\"weapon\">Weapon</label>\n            <input type=\"text\" name=\"weapon\" id=\"weapon\" value={weapon} onChange={this.handleChange}/>\n          <label for=\"ultimate\">Ultimate</label>\n            <input type=\"text\" name=\"ultimate\" id=\"ultimate\" value={ultimate} onChange={this.handleChange}/>\n          <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\n\nclass App extends Component{\n\n  state = {\n    characters: [],\n    seconds: 30,\n  }\n\n  removeCharacter = index =>{\n    const {characters} =  this.state;\n    this.setState({\n      characters: characters.filter((character,i) =>{\n        return i !== index;\n      }),\n    });\n  }\n\n  tick =() => {\n    if (this.state.seconds <= 0){\n      this.setState({seconds:0});\n    }\n    else{\n      this.setState(state => ({\n        seconds: state.seconds - 1\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  tick =() => {\n    if (this.state.seconds <= 0){\n      this.setState({seconds:0});\n    }\n    else{\n      this.setState(state => ({\n        seconds: state.seconds - 1\n      }));\n    }\n  }\n\n  handleSubmit = character => {\n    this.setState({characters: [...this.state.characters,character]});\n  }\n\n  render(){\n    const { characters } = this.state;\n\n    return(\n      <div className=\"container\">\n         <h1>  Hello my tarnation pillion self, what's poppin? </h1>\n         <h4> Fill the form below as many as possible before the time runs out! </h4>\n\n         <Table characterData = {characters} removeCharacter = {this.removeCharacter}/>\n         <div>\n           Form will be closed in: {this.state.seconds} second(s)\n         </div>\n         <Form handleSubmit ={this.handleSubmit}/>\n\n      </div>\n\n\n    );\n  }\n}\nexport default App\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}